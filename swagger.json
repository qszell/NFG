{
  "swagger": "2.0",
  "info": {
    "version": "0.0.2",
    "title": "System obsługi faktoringu - WebAPI",
    "description": "Dokumentacja dotycząca WebAPI dla Systemu Obsługi Faktoringu należącego do Narodowego Funduszu Gwarancyjnego S.A.",
    "contact": {
      "name": "NFG R&D Team",
      "email": "nfg-rozwoj@nfg.pl",
      "url": "http://nfg.pl/wspolpraca-partnerska/"
      },
    "license": {
     "name": "NFG",
     "url": "http://nfg.pl/regulamin"
   },
   "termsOfService": "http://nfg.pl/polityka-prywatnosci/",

    "x-logo": {
      "url": "https://qszell.github.io/NFG/NFG.png"
    }
  },
  "host": "api.nfg.pl",
  "tags": [
    {
      "name": "Client",
      "description": "Informacje o (potencjalnym) kliencie"
    },
    {
      "name": "Invoice",
      "description": "Zgłaszanie faktur oraz ich status"
    },
    {
      "name": "Dictionaries",
      "description": "Wartości słownikowe"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/client/checkIfRegistered/{taxId}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Sprawdzenie, czy klient jest zarejestrowany w SOF",
        "description": "Metoda pozwala na sprawdzenie, czy klient jest zarejestrowany w SOF. W przypadku nieprawidłowego NIPu zostanie zwrócony HTTP 400",
        "parameters": [
          {
            "name": "taxId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "NIP klienta"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Informacja czy klient jest zarejestrowany w Systemie obsługi faktoringu",
            "schema": {
              "$ref": "#/definitions/CheckIfRegisteredResponse"
            }
          },
          "400": {
            "description": "Nieprawidłowy NIP",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        },
        "security": [
          {
            "client_credentials_auth": [
              "sof.nip.isregistered"
            ]
          }
        ]
      }
    },
    "/client/canFundInvoice": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Sprawdzenie, czy klient ma możliwość finansowania faktury",
        "description": "Metoda pozwala na sprawdzenie, czy klient powiązany z tokenem ma możliwość finansowania faktury",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "sukces",
            "schema": {
              "$ref": "#/definitions/CanFundInvoiceResponse"
            }
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        },
        "security": [
          {
            "implicit_auth": [
              "sof.clients.invoices.fundingavailable"
            ]
          }
        ]
      }
    },
    "/invoice": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Przekazanie danych faktury do SOF",
        "description": "Dane faktury i dane płatnika zostaną przekazane do Systemu Obsługi Faktoringu. W celu dokończenia procesu sfinansowania wymagane będzie zalogowanie się do panelu SOF, wyrażenie wymaganych zgód oraz zatwierdzenie ich kodem z wiadomości SMS",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Dane faktury",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Informacja o powodzeniu dodania faktury",
            "schema": {
              "$ref": "#/definitions/InvoiceAddResponse"
            }
          },
          "400": {
            "description": "Błędne dane faktury lub brak możliwości jej sfinansowania",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        },
        "security": [
          {
            "implicit_auth": [
              "sof.invoice.single.add"
            ]
          }
        ]
      }
    },
    "/invoice/{invoiceId}/status": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Status zgłoszonej faktury",
        "description": "Metoda pozwala na pobranie statusu faktury zgłoszonej za pomocą metody: POST /invoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Identyfikator faktury"
          }
        ],
        "responses": {
          "200": {
            "description": "Informacja o powodzeniu dodania faktury",
            "schema": {
              "$ref": "#/definitions/InvoiceStatusResponse"
            }
          },
          "400": {
            "description": "Błędny identyfikator faktury",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Brak autoryzacji"
          },
          "404": {
            "description": "Nie znaleziono faktury"
          }
        },
        "security": [
          {
            "implicit_auth": [
              "sof.invoice.status.get"
            ]
          }
        ]
      }
    },
    "/dictionary/salesObjects": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Słownik 'Przedmiot sprzedaży'",
        "description": "Metoda pozwala na pobranie słownika 'Przedmiot sprzedaży'",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Zawartość słownika 'Przedmiot sprzedaży'",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DictionaryEntry"
              }
            }
          },
          "400": {
            "description": "Błędne dane faktury lub brak możliwości jej sfinansowania",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        },
        "security": [
          {
            "client_credentials_auth": [
              "sof.dictionary.get"
            ]
          }
        ]
      }
    },
    "/dictionary/companyTypes": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Słownik 'Kategoria działalności'",
        "description": "Metoda pozwala na pobranie słownika 'Kategoria działalności'",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Zawartość słownika 'Kategoria działalności'",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DictionaryEntry"
              }
            }
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        },
        "security": [
          {
            "client_credentials_auth": [
              "sof.dictionary.get"
            ]
          }
        ]
      }
    },
    "/dictionary/trades": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Słownik 'Branża'",
        "description": "Metoda pozwala na pobranie słownika 'Branża'",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DictionaryEntry"
              }
            }
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        },
        "security": [
          {
            "client_credentials_auth": [
              "sof.dictionary.get"
            ]
          }
        ]
      }
    },
    "/dictionary/trade/{tradeId}/companyActivityTypes": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Słownik 'Rodzaj prowadzonej działalności'",
        "description": "Metoda pozwala na pobranie słownika 'Rodzaj prowadzonej działalności' powiązanego ze słownikiem 'Branża'",
        "parameters": [
          {
            "name": "tradeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "Identyfikator branży kontrahenta"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DictionaryEntry"
              }
            }
          },
          "401": {
            "description": "Brak autoryzacji"
          }
        },
        "security": [
          {
            "client_credentials_auth": [
              "sof.dictionary.get"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "client_credentials_auth": {
      "type": "oauth2",
      "description": "Autoryzacja dostępu do zasobów niewymagających powiązania z klientem SOF. Partner otrzyma dane dostępowe wymagane do uwierzytelnienia.",
      "authorizationUrl": "https://api.nfg.pl/connect/authorize",
      "tokenUrl": "https://api.nfg.pl/connect/token",
      "flow": "accessCode",
      "scopes": {
        "sof.nip.isregistered": "",
        "sof.dictionary.get": ""
      }
    },
    "implicit_auth": {
      "type": "oauth2",
      "description": "Autoryzacja dostępu do zasobów wymagających dostępu do danych klienta SOF. Po wyrażeniu zgody przez klienta zostaną zwrócone odpowiednie tokeny.",
      "authorizationUrl": "https://api.nfg.pl/connect/authorize",
      "flow": "implicit",
      "scopes": {
        "sof.invoice.single.add": "",
        "sof.invoice.status.get": "",
        "sof.clients.invoices.fundingavailable": ""
      }
    }
  },
  "definitions": {
    "InvoiceStatusResponse": {
      "type": "object",
      "properties": {
        "statusId": {
          "type": "integer",
          "format": "int64"
        },
        "statusName": {
          "type": "string",
          "enum": [
            "dec. Indywidualna",
            "Niespłacona",
            "Odrzucona",
            "Okres karencji",
            "Okres opóźnienia I",
            "Okres opóźnienia II",
            "Okres opóźnienia III",
            "Procesowana",
            "Rozwiązana",
            "Sfinansowana",
            "Spłacona",
            "Ugoda",
            "Unieważniona",
            "Usunięta",
            "Wersja robocza",
            "Windykacja",
            "Wypowiedzenie",
            "Zaakceptowana"
          ]
        }
      }
    },
    "BadRequestResponse": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "validationMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationMessage"
          }
        }
      }
    },
    "ValidationMessage": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "messesage": {
          "type": "string"
        }
      }
    },
    "DictionaryEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Invoice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "invoiceNumber": {
          "type": "string"
        },
        "invoiceRegistrationDate": {
          "type": "string",
          "format": "date"
        },
        "saleObject": {
          "type": "integer",
          "format": "int64"
        },
        "invoiceDuePaymentDate": {
          "type": "string",
          "format": "date"
        },
        "bankAccountNumber": {
          "type": "integer",
          "format": "int64"
        },
        "isFirstInvoiceForContractor": {
          "type": "boolean"
        },
        "netValue": {
          "type": "number"
        },
        "grossValue": {
          "type": "number"
        },
        "contractor": {
          "$ref": "#/definitions/Contractor"
        }
      },
      "required": [
        "invoiceNumber",
        "invoiceRegistrationDate",
        "saleObject",
        "invoiceDuePaymentDate",
        "bankAccountNumber",
        "isFirstInvoiceForContractor",
        "netValue",
        "grossValue",
        "contractor"
      ],
      "example": {
        "id": 3459255938,
        "invoiceNumber": "FV/2018",
        "invoiceRegistrationDate": "2018-04-23",
        "saleObject": 1,
        "invoiceDuePaymentDate": "2018-05-23",
        "bankAccountNumber": "20947043414168803956717649",
        "isFirstInvoiceForContractor": false,
        "netValue": "12421.21",
        "grossValue": "14284.50",
        "contractor": {
          "taxId": 3914837934,
          "companyName": "Hurt Detal - Jan Kowalski",
          "emailAddress": "jan@kowalski.pl",
          "tradeId": 1,
          "companyActivityTypeId": 2,
          "companyTypeId": 1,
          "firstName": "Jan",
          "lastName": "Kowalski"
        }
      },
      "xml": {
        "name": "Invoice"
      }
    },
    "Contractor": {
      "type": "object",
      "properties": {
        "taxId": {
          "type": "integer",
          "format": "int64"
        },
        "companyName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string",
          "format": "email"
        },
        "tradeId": {
          "type": "integer",
          "format": "int64",
          "description": "Branża"
        },
        "companyActivityTypeId": {
          "type": "integer",
          "format": "int64",
          "description": "Rodzaj prowadzonej działalności"
        },
        "companyTypeId": {
          "type": "integer",
          "format": "int64",
          "enum": [
            1,
            2
          ],
          "description": "* 1 - Jednoosobowa działalność gospodarcza * 2 - Przedsiębiorstwo lub instytucja\n"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "CheckIfRegisteredResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "CheckIfRegisteredResponse"
      }
    },
    "CanFundInvoiceResponse": {
      "type": "object",
      "properties": {
        "canFund": {
          "type": "boolean"
        }
      }
    },
    "InvoiceAddResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "invoiceId": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
